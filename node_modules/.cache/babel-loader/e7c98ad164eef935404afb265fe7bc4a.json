{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksmead\\\\Documents\\\\Full Stack with Kalob\\\\react-201\\\\moviebrowser\\\\src\\\\components\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport Hero from \"./Hero\";\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react'; // https://api.themoviedb.org/3/movie/11?api_key=<<api_key>>&language=en-US\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=e2b77162f63d306b505032cf99cbb680&language=en-US`).then(response => response.json()).then(data => {\n      setMovieDetails(data);\n      setIsLoading(false);\n    });\n  }, [id]);\n\n  function renderMovieDetials() {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Hero, {\n        text: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (movieDetails) {\n      /*#__PURE__*/\n      _jsxDEV(Hero, {\n        text: movieDetails.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    }\n  } // return (\n  //   <>\n  //     <Hero text={movieDetails.original_title} />\n  //   </>\n  // );\n\n};\n\n_s(Movie, \"vefBGoDTzQtXilXkem5ea/GXfEI=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/ksmead/Documents/Full Stack with Kalob/react-201/moviebrowser/src/components/Movie.js"],"names":["Hero","useParams","useEffect","useState","Movie","id","console","log","movieDetails","setMovieDetails","isLoading","setIsLoading","fetch","then","response","json","data","renderMovieDetials","original_title"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAGA;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,QAAM,CAAEG,YAAF,EAAgBC,eAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEO,SAAF,EAAaC,YAAb,IAA6BR,QAAQ,CAAC,IAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACfU,IAAAA,KAAK,CAAE,sCAAqCP,EAAG,0DAA1C,CAAL,CACGQ,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZP,MAAAA,eAAe,CAACO,IAAD,CAAf;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH;AAMD,GAPQ,EAON,CAACN,EAAD,CAPM,CAAT;;AASA,WAASY,kBAAT,GAA6B;AAC3B,QAAGP,SAAH,EAAa;AACX,0BAAO,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAGF,YAAH,EAAgB;AACd;AAAA,cAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,YAAY,CAACU;AAAzB;AAAA;AAAA;AAAA;AAAA;AACD;AACF,GAtBiB,CAuBlB;AACA;AACA;AAEA;AACA;;AACD,CA7BD;;GAAMd,K;UACWH,S;;;KADXG,K;AA+BN,eAAeA,KAAf","sourcesContent":["import Hero from \"./Hero\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n// https://api.themoviedb.org/3/movie/11?api_key=<<api_key>>&language=en-US\r\n\r\nconst Movie = () => {\r\n  const { id } = useParams() \r\n  console.log(id); \r\n  const [ movieDetails, setMovieDetails ] = useState({})\r\n  const [ isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect (() => {\r\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=e2b77162f63d306b505032cf99cbb680&language=en-US`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMovieDetails(data)\r\n        setIsLoading(false)\r\n      })\r\n  }, [id])\r\n\r\n  function renderMovieDetials(){\r\n    if(isLoading){\r\n      return <Hero text=\"Loading...\" />\r\n    }\r\n    if(movieDetails){\r\n      <Hero text={movieDetails.original_title} />\r\n    }\r\n  }\r\n  // return (\r\n  //   <>\r\n  //     <Hero text={movieDetails.original_title} />\r\n     \r\n  //   </>\r\n  // );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}