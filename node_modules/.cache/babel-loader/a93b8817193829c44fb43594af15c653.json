{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksmead\\\\Documents\\\\Full Stack with Kalob\\\\react-201\\\\moviebrowser\\\\src\\\\components\\\\Search.js\";\nimport Hero from './Hero'; // tmbt api = e2b77162f63d306b505032cf99cbb680\n// Example link for movie searches = https://api.themoviedb.org/3/search/movie?api_key=e2b77162f63d306b505032cf99cbb680&language=en-US&query=star%20wars&page=1&include_adult=false\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: \"width: 18rem;\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: posterUrl,\n      className: \"card-img-top\",\n      alt: movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: movie.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"btn btn-primary\",\n        children: \"Go somewhere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieCard;\n\nconst Search = props => {\n  const title = `You are searching for ${props.keyword}`;\n  const resultsHtml = props.searchResults.map((obj, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      text: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), resultsHtml]\n  }, void 0, true);\n};\n\n_c2 = Search;\nexport default Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieCard\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["C:/Users/ksmead/Documents/Full Stack with Kalob/react-201/moviebrowser/src/components/Search.js"],"names":["Hero","MovieCard","props","posterUrl","movie","original_title","Search","title","keyword","resultsHtml","searchResults","map","obj","i","overview","release_date"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB,C,CAEA;AACA;;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,eAA5B;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEC,SAAV;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAA8C,MAAA,GAAG,EAAEC,KAAK,CAACC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BD,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;KAAMJ,S;;AAcN,MAAMK,MAAM,GAAIJ,KAAD,IAAW;AAE1B,QAAMK,KAAK,GAAI,yBAAwBL,KAAK,CAACM,OAAQ,EAArD;AAEA,QAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAN,CAAoBC,GAApB,CAAwB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACtD,wBACE;AAAA,6BACA;AAAA,gCACA;AAAA,oBAAMD,GAAG,CAACL;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA,eAEC;AAAA,oBAAMK,GAAG,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGA;AAAA,oBAAMF,GAAG,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA,SAAUF,CAAV;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAUD,GAXmB,CAApB;AAaE,sBACE;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEN;AAAZ;AAAA;AAAA;AAAA;AAAA,YADA,EAECE,WAFD;AAAA,kBADF;AAOD,CAxBD;;MAAMH,M;AA0BN,eAAeA,MAAf","sourcesContent":["import Hero from './Hero';\r\n\r\n// tmbt api = e2b77162f63d306b505032cf99cbb680\r\n// Example link for movie searches = https://api.themoviedb.org/3/search/movie?api_key=e2b77162f63d306b505032cf99cbb680&language=en-US&query=star%20wars&page=1&include_adult=false\r\n\r\nconst MovieCard = (props) => {\r\n  return (\r\n    <div className=\"card\" style=\"width: 18rem;\">\r\n      <img src={posterUrl} className=\"card-img-top\" alt={movie.original_title} />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{movie.original_title}</h5>\r\n        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst Search = (props) => {\r\n\r\nconst title = `You are searching for ${props.keyword}`;\r\n\r\nconst resultsHtml = props.searchResults.map((obj, i) => {\r\n  return (\r\n    <>\r\n    <div key={i}>\r\n    <div>{obj.title}</div>\r\n     <div>{obj.overview}</div>\r\n    <div>{obj.release_date}</div>\r\n    </div>\r\n    </>\r\n    \r\n  )\r\n})\r\n\r\n  return (\r\n    <>\r\n    <Hero text={title} />\r\n    {resultsHtml}\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}